---
apiVersion: v1
kind: Service
metadata:
    name: zk-svc
    labels:
        app: zk-svc
spec:
    selector:
        app: zk
    ports:
        - port: 2181
          name: client
        - port: 2888
          name: server
        - port: 3888
          name: election
    clusterIP: None
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  minAvailable: 1
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
    name: zk
spec:
    serviceName: zk-svc
    replicas: 3
    updateStrategy:
        type: RollingUpdate
    podManagementPolicy: Parallel
    template:
        metadata:
            labels:
                app: zk
        spec:
            containers:
            - name: zookeeper
              image: tingtingths/zookeeper:0.0.2
              imagePullPolicy: Always
              ports:
              - containerPort: 2181
                name: client
              - containerPort: 2888
                name: server
              - containerPort: 3888
                name: election
              resources:
                  requests:
                      cpu: 100m
                      memory: 150Mi
              env:
              - name: ZK_SERVERS
                value: "zk-0.zk-svc.default.svc.cluster.local,zk-1.zk-svc.default.svc.cluster.local,zk-2.zk-svc.default.svc.cluster.local"
              volumeMounts:
              - mountPath: "/zklog"
                name: zklog
              - mountPath: "/data"
                name: data
            volumes:
            - name: zklog
              hostPath:
                path: /var/log/zookeeper/logs
                type: DirectoryOrCreate
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
            requests:
                storage: 200Mi

